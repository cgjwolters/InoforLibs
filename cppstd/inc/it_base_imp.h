/* ---------------------------------------------------------------------- */
/* ------- Basic Template Definitions ----------------------------------- */
/* ------- Template Instantiations -------------------------------------- */
/* ---------------------------------------------------------------------- */
/* ------------- Copyright Inofor Hoek Aut BV 1996, C. Wolters ---------- */
/* ---------------------------------------------------------------------- */

#ifndef IT_BASE_INC
#error Included it_base.h instead
#endif

/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */

template <class T>
T *IT_Chain_Alloc<T>::New()
{
  if (root) {
    T *n = (T *)root;
    root = root->next;
    return n;
  }
  else return (T *)new char[sizeof(T)];
}

/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */

template <class T>
void IT_Chain_Alloc<T>::Free(T *v)
{
  if (v) {
    ((IT_Chain_Alloc *)v)->next = root;
    root = (IT_Chain_Alloc *)v;
  }
}

/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */

template <class T>
void IT_Chain_Alloc<T>::Cleanup()
{
  while (root) {
    IT_Chain_Alloc *nxt = root->next;

    delete root;

    root = nxt;
  }
}

/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */
/* ---------------------------------------------------------------------- */

